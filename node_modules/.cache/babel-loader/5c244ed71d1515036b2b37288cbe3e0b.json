{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Projects\\\\Sorting-Sight-main\\\\src\\\\components\\\\DropDownMenu\\\\DropDownMenu.js\";\nimport React, { Component } from 'react';\nimport Button from '../Button/Button';\nimport { IoIosArrowDropdownCircle as DropDown } from 'react-icons/io';\nimport { IoIosArrowDropupCircle as DropUp } from 'react-icons/io';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateMenuList = ({\n  open,\n  items,\n  onSelect\n}) => {\n  return open ? /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"Menu__List\",\n    children: items.map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"Menu__Item\",\n      onClick: event => {\n        onSelect(event, item);\n      },\n      children: item\n    }, `${item}_${i}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this) : null;\n};\n\n_c = CreateMenuList;\n\nclass DropDownMenu extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: this.props.open || false\n    };\n\n    this.toggle = () => {\n      this.setState(prevState => ({\n        open: !prevState.open\n      }));\n    };\n\n    this.close = () => {\n      this.setState({\n        open: false\n      });\n    };\n  }\n\n  render() {\n    const {\n      className,\n      selected,\n      onSelect,\n      placeholder,\n      items,\n      noDropIcon\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `Menu ${className}`,\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"Menu__Header\",\n        children: [noDropIcon ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.toggle,\n          notCased: true,\n          className: selected ? null : `Menu__Placeholder`,\n          children: selected ? selected : placeholder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: selected ? 'Menu__SelectedItem' : 'Menu__Placeholder',\n          children: selected ? selected : placeholder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), noDropIcon ? null : /*#__PURE__*/_jsxDEV(Button, {\n          icon: this.state.open ? DropUp : DropDown,\n          onClick: this.toggle,\n          className: 'Menu__DropDownButton'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CreateMenuList, {\n        open: this.state.open,\n        items: items,\n        onSelect: (event, item) => {\n          onSelect(item);\n          this.close(event);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default DropDownMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateMenuList\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/Projects/Sorting-Sight-main/src/components/DropDownMenu/DropDownMenu.js"],"names":["React","Component","Button","IoIosArrowDropdownCircle","DropDown","IoIosArrowDropupCircle","DropUp","CreateMenuList","open","items","onSelect","map","item","i","event","DropDownMenu","state","props","toggle","setState","prevState","close","render","className","selected","placeholder","noDropIcon"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from '../Button/Button';\nimport { IoIosArrowDropdownCircle as DropDown } from 'react-icons/io';\nimport { IoIosArrowDropupCircle as DropUp } from 'react-icons/io';\nimport './style.css';\n\nconst CreateMenuList = ({ open, items, onSelect }) => {\n    return open ? (\n        <ul className='Menu__List'>\n            {items.map((item, i) => (\n                <li\n                    className='Menu__Item'\n                    key={`${item}_${i}`}\n                    onClick={(event) => {\n                        onSelect(event, item);\n                    }}\n                >\n                    {item}\n                </li>\n            ))}\n        </ul>\n    ) : null;\n};\n\nclass DropDownMenu extends Component {\n    state = {\n        open: this.props.open || false\n    }\n\n    toggle = () => {\n        this.setState((prevState) => ({\n            open: !prevState.open\n        }));\n    }\n\n    close = () => {\n        this.setState({ open: false })\n    }\n\n    render(){\n        const { \n            className,\n            selected,\n            onSelect,\n            placeholder,\n            items,\n            noDropIcon\n        } = this.props;\n\n        return(\n            <div className={`Menu ${className}`}>\n                <header className='Menu__Header'>\n                    {noDropIcon ? (\n                        <Button\n                            onClick={this.toggle}\n                            notCased\n                            className={selected ? null : `Menu__Placeholder`}\n                        >\n                            {selected ? selected : placeholder}\n                        </Button>\n                    ) : (\n                        <div \n                            className={selected ? 'Menu__SelectedItem' : 'Menu__Placeholder'}\n                        >\n                            {selected ? selected : placeholder}\n                        </div>\n                    )}\n                    {noDropIcon ? null : (\n                        <Button\n                            icon={this.state.open ? DropUp : DropDown}\n                            onClick={this.toggle}\n                            className={'Menu__DropDownButton'}\n                        />\n                    )}\n                </header>\n                <CreateMenuList\n                    open={this.state.open} \n                    items={items} \n                    onSelect={(event, item) => {\n                        onSelect(item);\n                        this.close(event);\n                    }}\n                />\n            </div>\n        );\n    };\n};\n\nexport default DropDownMenu;"]},"metadata":{},"sourceType":"module"}