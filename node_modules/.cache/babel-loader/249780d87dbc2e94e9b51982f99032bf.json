{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Projects\\\\Sorting-Sight-main\\\\src\\\\components\\\\SortVisualizer\\\\SortVisualizer.js\";\nimport React, { Component } from 'react';\nimport './style.css';\nimport SortChart from '../SortChart/SortChart';\nimport ProgressBar from '../ProgressBar/ProgressBar';\nimport VisualizerControls from '../VisualizerControls/VisualizerControls';\nimport ColorKey from '../ColorKey/ColorKey';\nimport SortInfo from '../SortInfo/SortInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SortVisualizer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      trace: [],\n      traceStep: -1,\n      originalArray: [],\n      array: [],\n      groupA: [],\n      groupB: [],\n      groupC: [],\n      groupD: [],\n      sortedIndices: [],\n      timeoutIds: [],\n      playbackSpeed: 1\n    };\n\n    this._reset = array => {\n      this.setState({\n        array,\n        trace: [],\n        traceStep: -1,\n        originalArray: [...array],\n        groupA: [],\n        groupB: [],\n        groupC: [],\n        groupD: [],\n        sortedIndices: []\n      });\n    };\n\n    this.clearTimeouts = () => {\n      this.state.timeoutIds.forEach(timeoutId => {\n        clearTimeout(timeoutId);\n      });\n      this.setState({\n        timeoutIds: []\n      });\n    };\n\n    this._changeVisualState = visualState => {\n      this.setState({\n        array: visualState.array,\n        groupA: visualState.groupA,\n        groupB: visualState.groupB,\n        groupC: visualState.groupC,\n        groupD: visualState.groupD,\n        sortedIndices: visualState.sortedIndices\n      });\n    };\n\n    this.run = trace => {\n      const timeoutIds = [];\n      const timer = 250 / this.state.playbackSpeed; // set a timeout for each item in the trace\n\n      trace.forEach((item, i) => {\n        let timeoutId = setTimeout(item => {\n          this.setState(prevState => ({\n            traceStep: prevState.traceStep + 1\n          }), this._changeVisualState(item));\n        }, i * timer, item);\n        timeoutIds.push(timeoutId);\n      }); // clear timeouts upon completion\n\n      let timeoutId = setTimeout(this.clearTimeouts, trace.length * timer);\n      timeoutIds.push(timeoutId);\n      this.setState({\n        timeoutIds\n      });\n    };\n\n    this.pause = () => {\n      this.clearTimeouts();\n    };\n\n    this.continue = () => {\n      const trace = this.state.trace.slice(this.state.traceStep);\n      this.run(trace);\n    };\n\n    this.stepForward = () => {\n      const trace = this.state.trace;\n      const step = this.state.traceStep;\n\n      if (step < trace.length - 1) {\n        const item = trace[step + 1];\n        this.setState({\n          traceStep: step + 1\n        }, this._changeVisualState(item));\n      }\n\n      ;\n    };\n\n    this.stepBackward = () => {\n      const trace = this.state.trace;\n      const step = this.state.traceStep;\n\n      if (step > 0) {\n        const item = trace[step - 1];\n        this.setState({\n          traceStep: step - 1\n        }, this._changeVisualState(item));\n      }\n\n      ;\n    };\n\n    this.repeat = () => {\n      this.clearTimeouts();\n      this.setState(prevState => ({\n        array: [...prevState.originalArray],\n        traceStep: -1 // comparing: [],\n        // compared: [],\n        // sorted: []\n\n      }));\n      this.run(this.state.trace);\n    };\n\n    this.adjustPlaybackSpeed = speed => {\n      const playing = this.state.timeoutIds.length > 0;\n      this.pause();\n      const playbackSpeed = Number(speed.split('x')[0]);\n      console.log(playbackSpeed);\n      this.setState({\n        playbackSpeed\n      }, () => {\n        if (playing) {\n          this.continue();\n        }\n\n        ;\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.array !== this.props.array) {\n      this._reset(this.props.array);\n    }\n\n    ;\n\n    if (prevProps.trace !== this.props.trace) {\n      this.clearTimeouts();\n      this.setState({\n        trace: this.props.trace\n      });\n    }\n\n    ;\n  } // Actions\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SortVisualizer\",\n      children: [/*#__PURE__*/_jsxDEV(SortChart, {\n        numbers: this.state.array,\n        maxNum: Math.max(...this.state.array),\n        groupA: this.state.groupA,\n        groupB: this.state.groupB,\n        groupC: this.state.groupC,\n        groupD: this.state.groupD,\n        sortedIndices: this.state.sortedIndices\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SortVisualizer__ProgressBar\",\n        children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n          width: this.state.trace.length > 0 ? this.state.traceStep / (this.state.trace.length - 1) * 100 : 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(VisualizerControls, {\n        onPlay: this.state.traceStep === -1 ? this.run.bind(this, this.state.trace) : this.continue.bind(this),\n        onPause: this.pause.bind(this),\n        onForward: this.stepForward.bind(this),\n        onBackward: this.stepBackward.bind(this),\n        onRepeat: this.repeat.bind(this),\n        onAdjustSpeed: this.adjustPlaybackSpeed,\n        playing: this.state.timeoutIds.length > 0,\n        playDisabled: this.state.traceStep >= this.state.trace.length - 1 && this.state.traceStep !== -1 || this.state.trace.length <= 0,\n        forwardDisabled: this.state.traceStep >= this.state.trace.length - 1,\n        backwardDisabled: this.state.traceStep <= 0,\n        repeatDisabled: this.state.traceStep <= 0,\n        playbackSpeed: this.state.playbackSpeed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ColorKey, { ...this.props.colorKey\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SortInfo, { ...this.props.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SortVisualizer;","map":{"version":3,"sources":["C:/Users/hp/Desktop/Projects/Sorting-Sight-main/src/components/SortVisualizer/SortVisualizer.js"],"names":["React","Component","SortChart","ProgressBar","VisualizerControls","ColorKey","SortInfo","SortVisualizer","state","trace","traceStep","originalArray","array","groupA","groupB","groupC","groupD","sortedIndices","timeoutIds","playbackSpeed","_reset","setState","clearTimeouts","forEach","timeoutId","clearTimeout","_changeVisualState","visualState","run","timer","item","i","setTimeout","prevState","push","length","pause","continue","slice","stepForward","step","stepBackward","repeat","adjustPlaybackSpeed","speed","playing","Number","split","console","log","componentDidUpdate","prevProps","props","render","Math","max","bind","colorKey","desc"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './style.css';\n\nimport SortChart from '../SortChart/SortChart';\nimport ProgressBar from '../ProgressBar/ProgressBar';\nimport VisualizerControls from '../VisualizerControls/VisualizerControls';\nimport ColorKey from '../ColorKey/ColorKey';\nimport SortInfo from '../SortInfo/SortInfo';\n\nclass SortVisualizer extends Component {\n    state = {\n        trace:[],\n        traceStep: -1,\n        originalArray: [],\n        array: [],\n        groupA: [],\n        groupB: [],\n        groupC: [],\n        groupD: [],\n        sortedIndices: [],\n        timeoutIds: [],\n        playbackSpeed: 1\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.array !== this.props.array) {\n            this._reset(this.props.array);\n        };\n        if (prevProps.trace !== this.props.trace) {\n            this.clearTimeouts();\n            this.setState({ trace: this.props.trace });\n        };\n    }\n\n    // Actions\n\n    _reset = (array) => {\n        this.setState({\n            array,\n            trace:[],\n            traceStep: -1,\n            originalArray: [...array],\n            groupA: [],\n            groupB: [],\n            groupC: [],\n            groupD: [],\n            sortedIndices: []\n        });\n    }\n\n    clearTimeouts = () => {\n        this.state.timeoutIds.forEach((timeoutId) => {\n            clearTimeout(timeoutId)\n        });\n        this.setState({ timeoutIds: [] });\n    }\n\n    _changeVisualState = (visualState) => {\n        this.setState({\n            array: visualState.array,\n            groupA: visualState.groupA,\n            groupB: visualState.groupB,\n            groupC: visualState.groupC,\n            groupD: visualState.groupD,\n            sortedIndices: visualState.sortedIndices\n        });\n    }\n\n    run = (trace) => {\n        const timeoutIds = [];\n        const timer = 250 / this.state.playbackSpeed;\n\n        // set a timeout for each item in the trace\n        trace.forEach((item, i) => {\n            let timeoutId = setTimeout(\n                (item) => {\n                    this.setState((prevState) => ({\n                        traceStep: prevState.traceStep + 1\n                    }),\n                    this._changeVisualState(item)\n                    );\n                },\n                i * timer,\n                item\n            );\n\n            timeoutIds.push(timeoutId);\n        });\n\n        // clear timeouts upon completion\n        let timeoutId = setTimeout(\n            this.clearTimeouts,\n            trace.length * timer\n        );\n        timeoutIds.push(timeoutId);\n\n        this.setState({ timeoutIds });\n    }\n\n    pause = () => {\n        this.clearTimeouts();\n    }\n\n    continue = () => {\n        const trace = this.state.trace.slice(this.state.traceStep);\n        this.run(trace);\n    }\n\n    stepForward = () => {\n        const trace = this.state.trace;\n        const step = this.state.traceStep;\n\n        if (step < trace.length - 1) {\n            const item = trace[step + 1];\n            this.setState(\n                { traceStep: step + 1 },\n                this._changeVisualState(item)\n            );\n        };\n    }\n\n    stepBackward = () => {\n        const trace = this.state.trace;\n        const step = this.state.traceStep;\n\n        if (step > 0) {\n            const item = trace[step - 1];\n            this.setState(\n                { traceStep: step - 1},\n                this._changeVisualState(item)\n            );\n        };\n    }\n\n    repeat = () => {\n        this.clearTimeouts();\n        this.setState((prevState) => ({\n            array: [...prevState.originalArray],\n            traceStep: -1,\n            // comparing: [],\n            // compared: [],\n            // sorted: []\n        }));\n        this.run(this.state.trace);\n    }\n\n    adjustPlaybackSpeed = (speed) => {\n        const playing = this.state.timeoutIds.length > 0;\n        this.pause();\n        const playbackSpeed = Number(speed.split('x')[0]);\n        console.log(playbackSpeed);\n        this.setState({ playbackSpeed }, () => {\n            if (playing) { this.continue()};\n        });\n    }\n\n\n    render() {\n        return (\n            <div className='SortVisualizer'>\n\n                <SortChart \n                    numbers={this.state.array}\n                    maxNum={Math.max(...this.state.array)}\n                    groupA={this.state.groupA}\n                    groupB={this.state.groupB}\n                    groupC={this.state.groupC}\n                    groupD={this.state.groupD}\n                    sortedIndices={this.state.sortedIndices}\n                />\n\n                <div className='SortVisualizer__ProgressBar'>\n                    <ProgressBar \n                        width={\n                            this.state.trace.length > 0\n                                ? (this.state.traceStep / (this.state.trace.length - 1)) * 100\n                                : 0\n                        }\n                    />\n                </div>\n\n                <VisualizerControls \n                    onPlay={\n                        this.state.traceStep === -1\n                        ? this.run.bind(this, this.state.trace)\n                        : this.continue.bind(this)\n                    }\n                    onPause={this.pause.bind(this)}\n                    onForward={this.stepForward.bind(this)}\n                    onBackward={this.stepBackward.bind(this)}\n                    onRepeat={this.repeat.bind(this)}\n                    onAdjustSpeed={this.adjustPlaybackSpeed}\n                    playing={this.state.timeoutIds.length > 0}\n                    playDisabled={\n                        (this.state.traceStep >= this.state.trace.length - 1 && \n                            this.state.traceStep !== -1) ||\n                        this.state.trace.length <= 0\n                    }\n                    forwardDisabled={this.state.traceStep >= this.state.trace.length - 1}\n                    backwardDisabled={this.state.traceStep <= 0}\n                    repeatDisabled={this.state.traceStep <= 0}\n                    playbackSpeed={this.state.playbackSpeed}\n                />\n\n                <ColorKey {...this.props.colorKey} />\n\n                <SortInfo {...this.props.desc} />\n            </div>\n        );\n    };\n}\n\nexport default SortVisualizer;"]},"metadata":{},"sourceType":"module"}