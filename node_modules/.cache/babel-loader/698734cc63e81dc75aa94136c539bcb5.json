{"ast":null,"code":"export const newTrace = array => {\n  return [{\n    array: [...array],\n    groupA: [],\n    groupB: [],\n    groupC: [],\n    groupD: [],\n    sortedIndices: []\n  }];\n};\nexport const addToTrace = (trace, array, sortedIndices = [], groupA = [], groupB = [], groupC = [], groupD = []) => {\n  trace.push({\n    array: [...array],\n    groupA: [...groupA],\n    groupB: [...groupB],\n    groupC: [...groupC],\n    groupD: [...groupD],\n    sortedIndices: [...sortedIndices]\n  });\n};\nexport const lastSorted = trace => {\n  return trace[trace.length - 1].sortedIndices;\n};\nexport const swap = (array, i, j) => {\n  const temp = array[i];\n  array[i] = array[j];\n  array[j] = temp;\n};\nexport const createKey = (groupA, groupB, groupC, groupD) => {\n  return {\n    groupA,\n    groupB,\n    groupC,\n    groupD\n  };\n};\nexport const createRange = (start, end) => {\n  return [...Array(end - start).keys()].map(element => element + start);\n};","map":{"version":3,"sources":["C:/Users/hp/Desktop/Projects/Sorting-Sight-main/src/Algorithms/helpers.js"],"names":["newTrace","array","groupA","groupB","groupC","groupD","sortedIndices","addToTrace","trace","push","lastSorted","length","swap","i","j","temp","createKey","createRange","start","end","Array","keys","map","element"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAIC,KAAD,IAAW;AAC/B,SAAO,CACH;AACIA,IAAAA,KAAK,EAAE,CAAC,GAAGA,KAAJ,CADX;AAEIC,IAAAA,MAAM,EAAE,EAFZ;AAGIC,IAAAA,MAAM,EAAE,EAHZ;AAIIC,IAAAA,MAAM,EAAE,EAJZ;AAKIC,IAAAA,MAAM,EAAE,EALZ;AAMIC,IAAAA,aAAa,EAAE;AANnB,GADG,CAAP;AAUH,CAXM;AAaP,OAAO,MAAMC,UAAU,GAAG,CACtBC,KADsB,EAEtBP,KAFsB,EAGtBK,aAAa,GAAG,EAHM,EAItBJ,MAAM,GAAG,EAJa,EAKtBC,MAAM,GAAG,EALa,EAMtBC,MAAM,GAAG,EANa,EAOtBC,MAAM,GAAG,EAPa,KAQrB;AACDG,EAAAA,KAAK,CAACC,IAAN,CAAW;AACPR,IAAAA,KAAK,EAAE,CAAC,GAAGA,KAAJ,CADA;AAEPC,IAAAA,MAAM,EAAE,CAAC,GAAGA,MAAJ,CAFD;AAGPC,IAAAA,MAAM,EAAE,CAAC,GAAGA,MAAJ,CAHD;AAIPC,IAAAA,MAAM,EAAE,CAAC,GAAGA,MAAJ,CAJD;AAKPC,IAAAA,MAAM,EAAE,CAAC,GAAGA,MAAJ,CALD;AAMPC,IAAAA,aAAa,EAAE,CAAC,GAAGA,aAAJ;AANR,GAAX;AAQH,CAjBM;AAmBP,OAAO,MAAMI,UAAU,GAAIF,KAAD,IAAW;AACjC,SAAOA,KAAK,CAACA,KAAK,CAACG,MAAN,GAAe,CAAhB,CAAL,CAAwBL,aAA/B;AACH,CAFM;AAIP,OAAO,MAAMM,IAAI,GAAG,CAACX,KAAD,EAAQY,CAAR,EAAWC,CAAX,KAAiB;AACjC,QAAMC,IAAI,GAAGd,KAAK,CAACY,CAAD,CAAlB;AACAZ,EAAAA,KAAK,CAACY,CAAD,CAAL,GAAWZ,KAAK,CAACa,CAAD,CAAhB;AACAb,EAAAA,KAAK,CAACa,CAAD,CAAL,GAAWC,IAAX;AACH,CAJM;AAMP,OAAO,MAAMC,SAAS,GAAG,CAACd,MAAD,EAASC,MAAT,EAAiBC,MAAjB,EAAyBC,MAAzB,KAAoC;AAC1D,SAAO;AAACH,IAAAA,MAAD;AAASC,IAAAA,MAAT;AAAiBC,IAAAA,MAAjB;AAAyBC,IAAAA;AAAzB,GAAP;AACF,CAFM;AAIP,OAAO,MAAMY,WAAW,GAAG,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACvC,SAAO,CAAC,GAAGC,KAAK,CAACD,GAAG,GAAGD,KAAP,CAAL,CAAmBG,IAAnB,EAAJ,EAA+BC,GAA/B,CAAoCC,OAAD,IAAaA,OAAO,GAAGL,KAA1D,CAAP;AACH,CAFM","sourcesContent":["export const newTrace = (array) => {\n    return [\n        {\n            array: [...array],\n            groupA: [],\n            groupB: [],\n            groupC: [],\n            groupD: [],\n            sortedIndices: []\n        }\n    ];\n};\n\nexport const addToTrace = (\n    trace,\n    array,\n    sortedIndices = [],\n    groupA = [],\n    groupB = [],\n    groupC = [],\n    groupD = []\n) => {\n    trace.push({\n        array: [...array],\n        groupA: [...groupA],\n        groupB: [...groupB],\n        groupC: [...groupC],\n        groupD: [...groupD],\n        sortedIndices: [...sortedIndices]\n    });\n};\n\nexport const lastSorted = (trace) => {\n    return trace[trace.length - 1].sortedIndices;\n}\n\nexport const swap = (array, i, j) => {\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n};\n\nexport const createKey = (groupA, groupB, groupC, groupD) => {\n   return {groupA, groupB, groupC, groupD};\n};\n\nexport const createRange = (start, end) => {\n    return [...Array(end - start).keys()].map((element) => element + start);\n};\n\n"]},"metadata":{},"sourceType":"module"}