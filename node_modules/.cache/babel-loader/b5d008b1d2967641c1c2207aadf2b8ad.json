{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Projects\\\\Sorting-Sight-main\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TopBar from '../src/components/TopBar/TopBar';\nimport MobileNav from './components/MobileNav/MobileNav';\nimport AppControls from '../src/components/AppControls/AppControls';\nimport SortVisualizer from './components/SortVisualizer/SortVisualizer';\nimport BubbleSort, { BubbleSortDesc, BubbleSortKey } from './Algorithms/BubbleSort';\nimport SelectionSort, { SelectionSortDesc, SelectionSortKey } from './Algorithms/SelectionSort';\nimport InsertionSort, { InsertionSortDesc, InsertionSortKey } from './Algorithms/InsertionSort';\nimport MergeSort, { MergeSortDesc, MergeSortKey } from './Algorithms/MergeSort';\nimport Footer from './components/footer/footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mobileNavOpen: false,\n      array: [],\n      arraySize: 10,\n      trace: [],\n      algorithm: null\n    };\n    this.ALGORITHM = {\n      'Bubble Sort': BubbleSort,\n      'Selection Sort': SelectionSort,\n      'Merge Sort': MergeSort,\n      'Insertion Sort': InsertionSort\n    };\n    this.ALGORITHM_KEY = {\n      'Bubble Sort': BubbleSortKey,\n      'Selection Sort': SelectionSortKey,\n      'Merge Sort': MergeSortKey,\n      'Insertion Sort': InsertionSortKey\n    };\n    this.ALGORITHM_DESC = {\n      'Bubble Sort': BubbleSortDesc,\n      'Selection Sort': SelectionSortDesc,\n      'Merge Sort': MergeSortDesc,\n      'Insertion Sort': InsertionSortDesc\n    };\n\n    this.generateRandomArray = () => {\n      // generate random number between 1 and max\n      function getRandomNumber(max) {\n        return Math.floor(Math.random() * Math.floor(max)) + 1;\n      } // generate an array of length max\n\n\n      const array = Array(this.state.arraySize).fill(0).map(() => getRandomNumber(this.state.arraySize * 5));\n      this.setState({\n        array,\n        trace: []\n      }, this.createTrace);\n    };\n\n    this.handleAlgorithmChange = algorithm => {\n      this.setState({\n        algorithm\n      }, this.generateRandomArray);\n    };\n\n    this.handleArraySizeChange = arraySize => {\n      this.setState({\n        arraySize\n      }, this.generateRandomArray);\n    };\n\n    this.createTrace = () => {\n      const numbers = [...this.state.array];\n      const sort = this.ALGORITHM[this.state.algorithm];\n\n      if (sort) {\n        const trace = sort(numbers);\n        this.setState({\n          trace\n        });\n      }\n    };\n\n    this.toggleMobileNav = () => {\n      this.setState(prevState => ({\n        mobileNavOpen: !prevState.mobileNavOpen\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.generateRandomArray();\n  }\n\n  render() {\n    const colorKey = this.ALGORITHM_KEY[this.state.algorithm];\n    const desc = this.ALGORITHM_DESC[this.state.algorithm];\n\n    const controls = /*#__PURE__*/_jsxDEV(AppControls, {\n      algorithm: this.state.algorithm,\n      onAlgorithmChange: this.handleAlgorithmChange,\n      arraySize: this.state.arraySize,\n      onArraySizeChange: this.handleArraySizeChange,\n      onGenerateRandomArray: this.generateRandomArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(TopBar, {\n        mobileNavOpen: this.state.mobileNavOpen,\n        toggleMobileNav: this.toggleMobileNav,\n        children: controls\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MobileNav, {\n        open: this.state.mobileNavOpen,\n        closeMobileNav: this.toggleMobileNav,\n        children: controls\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"App__Body\",\n        children: /*#__PURE__*/_jsxDEV(SortVisualizer, {\n          array: this.state.array,\n          trace: this.state.trace,\n          colorKey: colorKey,\n          desc: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["C:/Users/hp/Desktop/Projects/Sorting-Sight-main/src/App.js"],"names":["React","Component","TopBar","MobileNav","AppControls","SortVisualizer","BubbleSort","BubbleSortDesc","BubbleSortKey","SelectionSort","SelectionSortDesc","SelectionSortKey","InsertionSort","InsertionSortDesc","InsertionSortKey","MergeSort","MergeSortDesc","MergeSortKey","Footer","App","state","mobileNavOpen","array","arraySize","trace","algorithm","ALGORITHM","ALGORITHM_KEY","ALGORITHM_DESC","generateRandomArray","getRandomNumber","max","Math","floor","random","Array","fill","map","setState","createTrace","handleAlgorithmChange","handleArraySizeChange","numbers","sort","toggleMobileNav","prevState","componentDidMount","render","colorKey","desc","controls"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport TopBar from '../src/components/TopBar/TopBar';\nimport MobileNav from './components/MobileNav/MobileNav';\nimport AppControls from '../src/components/AppControls/AppControls';\nimport SortVisualizer from './components/SortVisualizer/SortVisualizer';\n\nimport BubbleSort, { BubbleSortDesc, BubbleSortKey } from './Algorithms/BubbleSort';\nimport SelectionSort, { SelectionSortDesc, SelectionSortKey} from './Algorithms/SelectionSort';\nimport InsertionSort, { InsertionSortDesc, InsertionSortKey} from './Algorithms/InsertionSort';\nimport MergeSort, { MergeSortDesc, MergeSortKey } from './Algorithms/MergeSort';\nimport Footer from './components/footer/footer';\n\nclass App extends Component {\n  state = {\n    mobileNavOpen: false,\n    array: [],\n    arraySize: 10,\n    trace: [],\n    algorithm: null\n  }\n\n  ALGORITHM = {\n    'Bubble Sort': BubbleSort,\n    'Selection Sort': SelectionSort,\n    'Merge Sort': MergeSort,\n    'Insertion Sort':InsertionSort\n  }\n\n  ALGORITHM_KEY = {\n    'Bubble Sort': BubbleSortKey,\n    'Selection Sort': SelectionSortKey,\n    'Merge Sort': MergeSortKey,\n    'Insertion Sort':InsertionSortKey\n  }\n\n  ALGORITHM_DESC = {\n    'Bubble Sort': BubbleSortDesc,\n    'Selection Sort': SelectionSortDesc,\n    'Merge Sort': MergeSortDesc,\n    'Insertion Sort': InsertionSortDesc\n  }\n\n  componentDidMount() {\n    this.generateRandomArray();\n  }\n\n  generateRandomArray = () => {\n    // generate random number between 1 and max\n    function getRandomNumber(max) {\n      return Math.floor(Math.random() * Math.floor(max)) + 1;\n    }\n\n    // generate an array of length max\n    const array = Array(this.state.arraySize).fill(0).map(() => getRandomNumber(this.state.arraySize * 5));\n\n    this.setState({\n      array,\n      trace: []\n    },\n    this.createTrace\n    );\n\n  }\n\n  handleAlgorithmChange = (algorithm) => {\n    this.setState({ algorithm }, this.generateRandomArray);\n  }\n\n  handleArraySizeChange = (arraySize) => {\n    this.setState({ arraySize }, this.generateRandomArray);\n  }\n\n  createTrace = () => {\n    const numbers = [...this.state.array];\n    const sort = this.ALGORITHM[this.state.algorithm];\n    if(sort) {\n      const trace = sort(numbers);\n      this.setState({ trace });\n    }\n  };\n\n  toggleMobileNav = () => {\n    this.setState((prevState) => ({\n      mobileNavOpen: !prevState.mobileNavOpen\n    }));\n  };\n\n  \n\n  render() {\n\n    const colorKey = this.ALGORITHM_KEY[this.state.algorithm];\n    const desc = this.ALGORITHM_DESC[this.state.algorithm];\n    \n    const controls = (\n      <AppControls \n        algorithm={this.state.algorithm}\n        onAlgorithmChange={this.handleAlgorithmChange}\n        arraySize={this.state.arraySize}\n        onArraySizeChange={this.handleArraySizeChange}\n        onGenerateRandomArray={this.generateRandomArray}\n      />\n    );\n\n    return (\n      <div className=\"App\">\n\n        <TopBar\n          mobileNavOpen={this.state.mobileNavOpen}\n          toggleMobileNav={this.toggleMobileNav}\n        >\n          {controls} \n        </TopBar>\n\n        <MobileNav\n          open={this.state.mobileNavOpen}\n          closeMobileNav={this.toggleMobileNav}\n        >\n          {controls}\n        </MobileNav>\n\n        <main className='App__Body'>\n          <SortVisualizer \n            array={this.state.array}\n            trace={this.state.trace}\n            colorKey={colorKey}\n            desc={desc}\n          />\n        </main>\n        <Footer/>\n      </div>\n    );\n  }\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}